
version : '3'

services:
  nginx:
    container_name: c_nginx
    build: nginx/
    image: nginx
    depends_on :
      - wordpress
    restart: always
    ports:
      - "443:443"
    networks:
      - wordpress
    volumes:
      - wp_volume:/var/www/wordpress

  wordpress:
    container_name: c_wordpress
    build: wordpress/
    image: wordpress
    depends_on :
      - mariadb
    restart: always
    networks:
      - wordpress
    env_file:
      - .env
    volumes:
      - wp_volume:/var/www/wordpress

  mariadb:
    container_name: c_mariadb
    build: mariadb/
    image: mariadb
    restart: always
    networks:
      - wordpress
    env_file:
      - .env
    volumes:
      - db_volume:/var/lib/mysql

networks:
  wordpress:
    name: wp-wordpress
    driver: bridge

# networks:
#   inception_network:

volumes:
    db_volume:
      driver_opts:
        type: volume
        o : 'bind'
        device: '/home/kbaek/inceptions/srcs/docker-dbdata'

    wp_volume:
      driver_opts:
        type: volume
        o : 'bind'
        device: '/home/kbaek/inceptions/srcs/docker-wordpress'


# version: '3'

# services:
#   mariadb:
#     container_name: mariadb
#     build: ./mariadb
#     restart: always
#     # expose:
#     #   - "3306"
#     env_file:
#       - .env


# version: '3.9'
# services:

#   wordpress:
#     # default port 9000 (FastCGI)

#     # 모든 images를
#     # build: ./requirements/wordpress 이런 식으로 위에 넣어 이미지를 생성하게 해야 함
#     # 그 후 생성된 이미지를 불러와야 함.
#     image: wordpress:5-fpm
#     container_name: wp-wordpresss
#     env_file:
#       - .env
#     restart: always
#     networks:
#       - wordpress
#     depends_on:
#       - database
#     volumes:
#       - ${WORDPRESS_LOCAL_HOME}:/var/www/html
#       - ${WORDPRESS_UPLOADS_CONFIG}:/usr/local/etc/php/conf.d/uploads.ini
#     environment:
#       - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
#       - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
#       - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
#       - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}

#   database:
#     # default port 3306
#     build: mariadb/
#     image: mariadb
#     container_name: wp-database
#     env_file:
#       - .env
#     restart: always
#     networks:
#       - wordpress
#     environment:
#       - MYSQL_DATABASE=${MYSQL_DATABASE}
#       - MYSQL_USER=${MYSQL_USER}
#       - MYSQL_PASSWORD=${MYSQL_PASSWORD}
#       - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#     ports:
#      - "3306:3306"
#     volumes:
#       - ${MYSQL_LOCAL_HOME}:/var/lib/mysql
#     command:
#      - '--default-authentication-plugin=mysql_native_password'

#   nginx:
#     build: nginx/
#     image: nginx
#     container_name: wp-nginx
#     env_file:
#       - .env
#     restart: always
#     networks:
#       - wordpress
#     depends_on:
#       - wordpress
#     ports:
#       - "443:443"   # https
#     volumes:
#       - ${WORDPRESS_LOCAL_HOME}:/var/www/html
#       - ${NGINX_CONF}:/etc/nginx/conf.d/default.conf

# #   adminer - bring up only as needed - bypasses nginx
# #  adminer:
# #    # default port 8080
# #    image: adminer:4
# #    container_name: wp-adminer
# #    restart: always
# #    networks:
# #      - wordpress
# #    depends_on:
# #      - database
# #    ports:
# #      - "9000:8080"

# networks:
#   wordpress:
#     name: wp-wordpress
#     driver: bridge